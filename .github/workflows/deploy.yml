name: Kamal Deploy
concurrency:
  group: deploy-to-kamal
  cancel-in-progress: false

on:
  push:
    branches:
      - main

jobs:
  Deploy:
    runs-on: ubuntu-latest
    environment: Production
    env:
      DOCKER_BUILDKIT: 1
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
      NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
      ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      TWELVEDATA_API_KEY: ${{ secrets.TWELVEDATA_API_KEY }}
      USE_SIA: ${{ secrets.USE_SIA }}
      SIA_API_URL: ${{ secrets.SIA_API_URL }}
      SIA_ADMIN_USERNAME: ${{ secrets.SIA_ADMIN_USERNAME }}
      SIA_ADMIN_PASSWORD: ${{ secrets.SIA_ADMIN_PASSWORD }}
      NEXT_PUBLIC_POSTHOG_KEY: ${{ secrets.NEXT_PUBLIC_POSTHOG_KEY }}
      NEXT_PUBLIC_POSTHOG_HOST: ${{ secrets.NEXT_PUBLIC_POSTHOG_HOST }}
      RENTERD_SEED: ${{ secrets.RENTERD_SEED }}
      RENTERD_API_PASSWORD: ${{ secrets.RENTERD_API_PASSWORD }}
      KAMAL_REGISTRY_PASSWORD: ${{ secrets.KAMAL_REGISTRY_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.0
          bundler-cache: true

      - name: Install dependencies
        run: |
          gem install kamal

      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Create builder
        run: docker buildx create --use --name formbricks-gh-actions-builder
        if: steps.buildx.outputs.should_create_builder == 'true'

      - name: Push env variables to Kamal
        run: |
          kamal lock release
          kamal env push

      - name: Run deploy command
        run: |
          set +e
          DEPLOY_OUTPUT=$(kamal deploy 2>&1)
          DEPLOY_EXIT_CODE=$?
          echo "$DEPLOY_OUTPUT"
          if [[ "$DEPLOY_OUTPUT" == *"container not unhealthy (healthy)"* ]]; then
            echo "Deployment reported healthy container. Considering as success."
            kamal lock release
            exit 0
          else
            exit $DEPLOY_EXIT_CODE
          fi
        shell: bash
